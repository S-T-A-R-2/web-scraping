{"ast":null,"code":"var _jsxFileName = \"/home/anfeng/Desktop/web-scraping/Interfaz/frontend/src/pages/TopTagsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getTopTagsWithMostDistinctWords, getTopTagsWithMostText, findPageByUrl } from '../api/auth';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopTagsPage = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [pageId, setPageId] = useState(null);\n  const [distinctWordsTags, setDistinctWordsTags] = useState([]);\n  const [textCountTags, setTextCountTags] = useState([]);\n  const [error, setError] = useState('');\n\n  // Función para obtener los resultados de ambas consultas\n  const handleSearch = async () => {\n    try {\n      let currentPageId = pageId;\n\n      // Si no se ha proporcionado un ID, buscamos usando la URL\n      if (!pageId) {\n        const response = await findPageByUrl(input);\n        currentPageId = response.data.pageId;\n        setPageId(currentPageId);\n      }\n      if (!currentPageId) {\n        setError('No se pudo encontrar la página. Verifica el URL o el ID ingresado.');\n        return;\n      }\n\n      // Obtener los resultados de Top Tags para ambas métricas\n      const [distinctWordsResponse, textCountResponse] = await Promise.all([getTopTagsWithMostDistinctWords(currentPageId), getTopTagsWithMostText(currentPageId)]);\n      setDistinctWordsTags(distinctWordsResponse.data);\n      setTextCountTags(textCountResponse.data);\n      setError('');\n    } catch (err) {\n      setError('No se pudo obtener los resultados. Verifica el URL o el ID e intenta de nuevo.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-white bg-zinc-900 m-auto h-screen max-w-[800px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl p-5\",\n      children: \"Top Tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex p-5\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Ingresa URL o ID de p\\xE1gina...\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSearch,\n        children: \"Buscar y Mostrar Top Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl\",\n        children: \"Top Tags con M\\xE1s Palabras Distintas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: distinctWordsTags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [tag.tag, \": \", tag.distinct_words_count, \" palabras distintas\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl\",\n        children: \"Top Tags con M\\xE1s Texto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: textCountTags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [tag.tag, \": \", tag.text_count, \" palabras\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(TopTagsPage, \"7Dk/7kU/ge7pvLAsrhWiCzQrdig=\");\n_c = TopTagsPage;\nexport default TopTagsPage;\nvar _c;\n$RefreshReg$(_c, \"TopTagsPage\");","map":{"version":3,"names":["React","useState","getTopTagsWithMostDistinctWords","getTopTagsWithMostText","findPageByUrl","Button","Input","jsxDEV","_jsxDEV","TopTagsPage","_s","input","setInput","pageId","setPageId","distinctWordsTags","setDistinctWordsTags","textCountTags","setTextCountTags","error","setError","handleSearch","currentPageId","response","data","distinctWordsResponse","textCountResponse","Promise","all","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","map","tag","index","distinct_words_count","text_count","_c","$RefreshReg$"],"sources":["/home/anfeng/Desktop/web-scraping/Interfaz/frontend/src/pages/TopTagsPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { getTopTagsWithMostDistinctWords, getTopTagsWithMostText, findPageByUrl } from '../api/auth';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\n\nconst TopTagsPage: React.FC = () => {\n    const [input, setInput] = useState<string>('');\n    const [pageId, setPageId] = useState<number | null>(null);\n    const [distinctWordsTags, setDistinctWordsTags] = useState([]);\n    const [textCountTags, setTextCountTags] = useState([]);\n    const [error, setError] = useState<string>('');\n\n    // Función para obtener los resultados de ambas consultas\n    const handleSearch = async () => {\n        try {\n            let currentPageId = pageId;\n\n            // Si no se ha proporcionado un ID, buscamos usando la URL\n            if (!pageId) {\n                const response = await findPageByUrl(input);\n                currentPageId = response.data.pageId;\n                setPageId(currentPageId);\n            }\n\n            if (!currentPageId) {\n                setError('No se pudo encontrar la página. Verifica el URL o el ID ingresado.');\n                return;\n            }\n\n            // Obtener los resultados de Top Tags para ambas métricas\n            const [distinctWordsResponse, textCountResponse] = await Promise.all([\n                getTopTagsWithMostDistinctWords(currentPageId),\n                getTopTagsWithMostText(currentPageId),\n            ]);\n\n            setDistinctWordsTags(distinctWordsResponse.data);\n            setTextCountTags(textCountResponse.data);\n            setError('');\n        } catch (err) {\n            setError('No se pudo obtener los resultados. Verifica el URL o el ID e intenta de nuevo.');\n        }\n    };\n\n    return (\n        <div className=\"text-white bg-zinc-900 m-auto h-screen max-w-[800px]\">\n            <h1 className=\"text-5xl p-5\">Top Tags</h1>\n\n            {/* Input para URL o ID */}\n            <div className=\"flex p-5\">\n                <Input\n                    placeholder=\"Ingresa URL o ID de página...\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                />\n                <Button onClick={handleSearch}>Buscar y Mostrar Top Tags</Button>\n            </div>\n\n            {/* Mensaje de error */}\n            {error && <p className=\"text-red-500\">{error}</p>}\n\n            {/* Resultados: Top Tags con Más Palabras Distintas */}\n            <div className=\"p-5\">\n                <h2 className=\"text-3xl\">Top Tags con Más Palabras Distintas</h2>\n                <ul>\n                    {distinctWordsTags.map((tag: any, index: number) => (\n                        <li key={index}>\n                            {tag.tag}: {tag.distinct_words_count} palabras distintas\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n            {/* Resultados: Top Tags con Más Texto */}\n            <div className=\"p-5\">\n                <h2 className=\"text-3xl\">Top Tags con Más Texto</h2>\n                <ul>\n                    {textCountTags.map((tag: any, index: number) => (\n                        <li key={index}>\n                            {tag.tag}: {tag.text_count} palabras\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default TopTagsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}