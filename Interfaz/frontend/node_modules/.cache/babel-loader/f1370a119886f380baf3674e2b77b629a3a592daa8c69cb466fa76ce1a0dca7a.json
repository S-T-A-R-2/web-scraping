{"ast":null,"code":"import axios from './axios';\nexport const registerRequest = userData => {\n  return axios.post(`/register`, userData);\n};\nexport const loginRequest = userData => axios.post(`/login`, userData);\nexport const verifyTokenRequest = () => axios.get(`/verify`);\n\n//Invoices\nexport const createInvoice = invoice => {\n  return axios.post('/createInvoice', invoice);\n};\nexport const getAllInvoices = () => axios.get('/get-all-invoice');\nexport const filterInvoices = (stateFilter, dateRangeFilter, searchInvoiceNumber, userFilter) => axios.get('/filter-invoices', {\n  params: {\n    stateFilter,\n    dateRangeFilter,\n    searchInvoiceNumber,\n    userFilter\n  }\n});\nexport const getImage = number => axios.get('/getImage', {\n  params: {\n    number\n  }\n});\nexport const setInvoiceState = update => axios.post('/set-invoice-state', update);\n\n//Medicines\nexport const getMedicines = () => {\n  return axios.get('/getmedicines');\n};\nexport const filterMedicines = (searchName, inBenefitsProgram) => axios.get('/filter-medicines', {\n  params: {\n    searchName,\n    inBenefitsProgram\n  }\n});\nexport const updateRedeemPoints = medicine => axios.put('/updateRedeem', medicine);\nexport const updateGivenPoints = medicine => axios.put('/updateGiven', medicine);\nexport const getAllPharmacies = () => axios.get('/get-all-pharmacies');\nexport const searchByWords = words => axios.get('/searchByWord', {\n  params: {\n    words\n  }\n});","map":{"version":3,"names":["axios","registerRequest","userData","post","loginRequest","verifyTokenRequest","get","createInvoice","invoice","getAllInvoices","filterInvoices","stateFilter","dateRangeFilter","searchInvoiceNumber","userFilter","params","getImage","number","setInvoiceState","update","getMedicines","filterMedicines","searchName","inBenefitsProgram","updateRedeemPoints","medicine","put","updateGivenPoints","getAllPharmacies","searchByWords","words"],"sources":["/home/josed/Escritorio/Proyecto2Bases/proyecto2/web-scraping/Interfaz/frontend/src/api/auth.tsx"],"sourcesContent":["import axios from './axios';\nimport { User } from '../logic/classes/User'\n\ntype UserData = {\n    username: string;\n    name: string;\n    phone: string;\n    email: string;\n    password: string;\n    rol: string;\n};\n\ntype InvoiceData = {\n    number: number;\n    date: string;\n    pharmacy: string;\n    medicine: string;\n    quantity: number;\n    image: string;\n    state: string;\n};\n\ntype MedicineData = {\n    name: string;\n    description: string;\n    redeeming_points: number;\n    points_given: number;\n};\n\ntype SearchByWordData = {\n    text: string;\n}\n\nexport const registerRequest = (userData : UserData) => {return axios.post(`/register`, userData);};\nexport const loginRequest = (userData : {username : string, password : string}) => \n    axios.post(`/login`, userData);\nexport const verifyTokenRequest = () => axios.get(`/verify`);\n \n//Invoices\nexport const createInvoice = (invoice : InvoiceData) => {\n    return axios.post('/createInvoice',invoice);\n}\n\nexport const getAllInvoices = () => axios.get('/get-all-invoice'); \nexport const filterInvoices = (stateFilter:any, dateRangeFilter:any, searchInvoiceNumber:any, userFilter: any) => axios.get('/filter-invoices', {\n  params:{stateFilter, dateRangeFilter, searchInvoiceNumber, userFilter}\n});\nexport const getImage = (number: any) => axios.get('/getImage', {params: {number}});\n\nexport const setInvoiceState = (update:{number:number, state:string}) => axios.post('/set-invoice-state', update)\n\n//Medicines\nexport const getMedicines = () => {return axios.get('/getmedicines');};\nexport const filterMedicines = (searchName: any, inBenefitsProgram: any) => axios.get('/filter-medicines', {\n    params: {searchName, inBenefitsProgram}\n});\nexport const updateRedeemPoints = (medicine: MedicineData) => axios.put('/updateRedeem', medicine);\nexport const updateGivenPoints = (medicine: MedicineData) => axios.put('/updateGiven', medicine);\nexport const getAllPharmacies = () => axios.get('/get-all-pharmacies');\n\nexport const searchByWords = (words: SearchByWordData) => axios.get('/searchByWord', {\n    params: {words}\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,SAAS;AAiC3B,OAAO,MAAMC,eAAe,GAAIC,QAAmB,IAAK;EAAC,OAAOF,KAAK,CAACG,IAAI,CAAC,WAAW,EAAED,QAAQ,CAAC;AAAC,CAAC;AACnG,OAAO,MAAME,YAAY,GAAIF,QAAiD,IAC1EF,KAAK,CAACG,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC;AAClC,OAAO,MAAMG,kBAAkB,GAAGA,CAAA,KAAML,KAAK,CAACM,GAAG,CAAC,SAAS,CAAC;;AAE5D;AACA,OAAO,MAAMC,aAAa,GAAIC,OAAqB,IAAK;EACpD,OAAOR,KAAK,CAACG,IAAI,CAAC,gBAAgB,EAACK,OAAO,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAMT,KAAK,CAACM,GAAG,CAAC,kBAAkB,CAAC;AACjE,OAAO,MAAMI,cAAc,GAAGA,CAACC,WAAe,EAAEC,eAAmB,EAAEC,mBAAuB,EAAEC,UAAe,KAAKd,KAAK,CAACM,GAAG,CAAC,kBAAkB,EAAE;EAC9IS,MAAM,EAAC;IAACJ,WAAW;IAAEC,eAAe;IAAEC,mBAAmB;IAAEC;EAAU;AACvE,CAAC,CAAC;AACF,OAAO,MAAME,QAAQ,GAAIC,MAAW,IAAKjB,KAAK,CAACM,GAAG,CAAC,WAAW,EAAE;EAACS,MAAM,EAAE;IAACE;EAAM;AAAC,CAAC,CAAC;AAEnF,OAAO,MAAMC,eAAe,GAAIC,MAAoC,IAAKnB,KAAK,CAACG,IAAI,CAAC,oBAAoB,EAAEgB,MAAM,CAAC;;AAEjH;AACA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAC,OAAOpB,KAAK,CAACM,GAAG,CAAC,eAAe,CAAC;AAAC,CAAC;AACtE,OAAO,MAAMe,eAAe,GAAGA,CAACC,UAAe,EAAEC,iBAAsB,KAAKvB,KAAK,CAACM,GAAG,CAAC,mBAAmB,EAAE;EACvGS,MAAM,EAAE;IAACO,UAAU;IAAEC;EAAiB;AAC1C,CAAC,CAAC;AACF,OAAO,MAAMC,kBAAkB,GAAIC,QAAsB,IAAKzB,KAAK,CAAC0B,GAAG,CAAC,eAAe,EAAED,QAAQ,CAAC;AAClG,OAAO,MAAME,iBAAiB,GAAIF,QAAsB,IAAKzB,KAAK,CAAC0B,GAAG,CAAC,cAAc,EAAED,QAAQ,CAAC;AAChG,OAAO,MAAMG,gBAAgB,GAAGA,CAAA,KAAM5B,KAAK,CAACM,GAAG,CAAC,qBAAqB,CAAC;AAEtE,OAAO,MAAMuB,aAAa,GAAIC,KAAuB,IAAK9B,KAAK,CAACM,GAAG,CAAC,eAAe,EAAE;EACjFS,MAAM,EAAE;IAACe;EAAK;AAClB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}