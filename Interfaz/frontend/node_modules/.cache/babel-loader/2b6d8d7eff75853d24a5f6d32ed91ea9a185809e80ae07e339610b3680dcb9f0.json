{"ast":null,"code":"var _jsxFileName = \"/home/anfeng/Desktop/web-scraping/Interfaz/frontend/src/pages/SearchPagesPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\nimport { useNavigate } from 'react-router-dom';\nimport { getWordPercentageInPage, getTopTagsWithMostDistinctWords, getTopTagsWithMostText } from '../api/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPagesPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [pageId, setPageId] = useState(\"1\"); // Página por defecto para pruebas\n  const [percentageData, setPercentageData] = useState([]);\n  const [distinctWordsData, setDistinctWordsData] = useState([]);\n  const [textData, setTextData] = useState([]);\n  const testGetWordPercentage = async () => {\n    try {\n      const data = await getWordPercentageInPage(pageId);\n      console.log(\"Resultado de getWordPercentageInPage:\", data);\n      setPercentageData(data);\n    } catch (error) {\n      console.error(\"Error al obtener el porcentaje de palabras:\", error);\n    }\n  };\n\n  // Prueba para el Punto 9: Obtener los TAGs con más palabras distintas\n  const testGetTopTagsWithMostDistinctWords = async () => {\n    try {\n      const data = await getTopTagsWithMostDistinctWords(pageId);\n      console.log(\"Resultado de getTopTagsWithMostDistinctWords:\", data);\n      setDistinctWordsData(data);\n    } catch (error) {\n      console.error(\"Error al obtener los TAGs con más palabras distintas:\", error);\n    }\n  };\n\n  // Prueba para el Punto 10: Obtener los TAGs con más texto en general\n  const testGetTopTagsWithMostText = async () => {\n    try {\n      const data = await getTopTagsWithMostText(pageId);\n      console.log(\"Resultado de getTopTagsWithMostText:\", data);\n      setTextData(data);\n    } catch (error) {\n      console.error(\"Error al obtener los TAGs con más texto:\", error);\n    }\n  };\n  useEffect(() => {\n    testGetWordPercentage();\n    testGetTopTagsWithMostDistinctWords();\n    testGetTopTagsWithMostText();\n  }, [pageId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-white bg-zinc-900 m-auto h-screen max-w-[800px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl p-5\",\n      children: \"Buscar por p\\xE1gina\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex p-5\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Buscar p\\xE1ginas...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"inline\",\n        children: \" Search \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"text-2xl\",\n      onClick: () => {\n        navigate(\"/\");\n      },\n      children: \"Volver a inicio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPagesPage, \"AEmnmNvJMJXWbI8AbALrDacjeEc=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchPagesPage;\nexport default SearchPagesPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPagesPage\");","map":{"version":3,"names":["React","useEffect","useState","Button","Input","useNavigate","getWordPercentageInPage","getTopTagsWithMostDistinctWords","getTopTagsWithMostText","jsxDEV","_jsxDEV","SearchPagesPage","_s","navigate","pageId","setPageId","percentageData","setPercentageData","distinctWordsData","setDistinctWordsData","textData","setTextData","testGetWordPercentage","data","console","log","error","testGetTopTagsWithMostDistinctWords","testGetTopTagsWithMostText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/anfeng/Desktop/web-scraping/Interfaz/frontend/src/pages/SearchPagesPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\nimport {useNavigate} from 'react-router-dom';\n\nimport { getWordPercentageInPage, getTopTagsWithMostDistinctWords, getTopTagsWithMostText } from '../api/auth';\n\nconst SearchPagesPage = () => {\n\n  const navigate = useNavigate();\n\n  const [pageId, setPageId] = useState(\"1\"); // Página por defecto para pruebas\n  const [percentageData, setPercentageData] = useState([]);\n  const [distinctWordsData, setDistinctWordsData] = useState([]);\n  const [textData, setTextData] = useState([]);\n\n  const testGetWordPercentage = async () => {\n    try {\n      const data = await getWordPercentageInPage(pageId);\n      console.log(\"Resultado de getWordPercentageInPage:\", data);\n      setPercentageData(data);\n    } catch (error) {\n      console.error(\"Error al obtener el porcentaje de palabras:\", error);\n    }\n  };\n\n  // Prueba para el Punto 9: Obtener los TAGs con más palabras distintas\n  const testGetTopTagsWithMostDistinctWords = async () => {\n    try {\n      const data = await getTopTagsWithMostDistinctWords(pageId);\n      console.log(\"Resultado de getTopTagsWithMostDistinctWords:\", data);\n      setDistinctWordsData(data);\n    } catch (error) {\n      console.error(\"Error al obtener los TAGs con más palabras distintas:\", error);\n    }\n  };\n\n  // Prueba para el Punto 10: Obtener los TAGs con más texto en general\n  const testGetTopTagsWithMostText = async () => {\n    try {\n      const data = await getTopTagsWithMostText(pageId);\n      console.log(\"Resultado de getTopTagsWithMostText:\", data);\n      setTextData(data);\n    } catch (error) {\n      console.error(\"Error al obtener los TAGs con más texto:\", error);\n    }\n  };\n\n  useEffect(() => {\n    testGetWordPercentage();\n    testGetTopTagsWithMostDistinctWords();\n    testGetTopTagsWithMostText();\n  }, [pageId]);\n\n  return (\n    <div className=\"text-white bg-zinc-900 m-auto h-screen max-w-[800px]\">\n      <h1 className='text-5xl p-5'>Buscar por página</h1>\n      <div className='flex p-5'>\n\t\t\t\t<Input placeholder='Buscar páginas...'/>\n        <Button className=\"inline\"> Search </Button>\n      </div>\n\n\n\n\n      <Button className=\"text-2xl\" onClick={() => {navigate(\"/\")}}>Volver a inicio</Button>\n    </div>\n  );\n};\n\nexport default SearchPagesPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}