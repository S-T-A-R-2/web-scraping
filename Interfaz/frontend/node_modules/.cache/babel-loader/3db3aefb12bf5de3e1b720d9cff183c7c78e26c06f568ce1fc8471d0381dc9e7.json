{"ast":null,"code":"var _jsxFileName = \"/home/anfeng/Desktop/web-scraping/Interfaz/frontend/src/pages/TopTagsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\nimport Dropdown from '../components/Dropdown';\nimport { useNavigate } from 'react-router-dom';\nimport { getTopTagsWithMostDistinctWords, getTopTagsWithMostText } from '../api/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopTagsPage = () => {\n  _s();\n  const [pageId, setPageId] = useState(\"1\");\n  const [selectedOption, setSelectedOption] = useState(\"distinct\");\n  const [tagsData, setTagsData] = useState([]);\n  const navigate = useNavigate();\n\n  // Opciones para el Dropdown\n  const options = [{\n    label: \"TAGs con más palabras distintas\",\n    value: \"distinct\"\n  }, {\n    label: \"TAGs con más texto\",\n    value: \"text\"\n  }];\n\n  // Función para obtener los datos según la opción seleccionada\n  const fetchTagsData = async () => {\n    try {\n      let response;\n      if (selectedOption === \"distinct\") {\n        response = await getTopTagsWithMostDistinctWords(pageId);\n      } else {\n        response = await getTopTagsWithMostText(pageId);\n      }\n      console.log(\"Resultado:\", response.data);\n      setTagsData(response.data);\n    } catch (error) {\n      console.error(\"Error al obtener los datos:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchTagsData();\n  }, [selectedOption, pageId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-white bg-zinc-900 m-auto h-screen max-w-[800px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl p-5\",\n      children: \"Top de TAGs por P\\xE1gina\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      buttonText: \"Seleccionar Top\",\n      action: () => {},\n      isActive: true,\n      options: options.map(option => ({\n        label: option.label,\n        onClick: () => setSelectedOption(option.value)\n      })),\n      showHeader: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Ingrese el ID de la p\\xE1gina...\",\n      value: pageId,\n      onChange: e => setPageId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: fetchTagsData,\n      children: \"Buscar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl p-5\",\n      children: \"Resultados:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tagsData.map((tag, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: tag.tag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), \": \", selectedOption === \"distinct\" ? `${tag.count} palabras distintas` : `${tag.textLength} caracteres de texto`]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"text-2xl\",\n      onClick: () => navigate(\"/\"),\n      children: \"Volver a inicio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(TopTagsPage, \"G2F2f5BiRW0xrvjW0VjIiJpjazY=\", false, function () {\n  return [useNavigate];\n});\n_c = TopTagsPage;\nexport default TopTagsPage;\nvar _c;\n$RefreshReg$(_c, \"TopTagsPage\");","map":{"version":3,"names":["React","useEffect","useState","Button","Input","Dropdown","useNavigate","getTopTagsWithMostDistinctWords","getTopTagsWithMostText","jsxDEV","_jsxDEV","TopTagsPage","_s","pageId","setPageId","selectedOption","setSelectedOption","tagsData","setTagsData","navigate","options","label","value","fetchTagsData","response","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","buttonText","action","isActive","map","option","onClick","showHeader","placeholder","onChange","e","target","tag","index","count","textLength","_c","$RefreshReg$"],"sources":["/home/anfeng/Desktop/web-scraping/Interfaz/frontend/src/pages/TopTagsPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\nimport Dropdown from '../components/Dropdown';\nimport { useNavigate } from 'react-router-dom';\nimport { getTopTagsWithMostDistinctWords, getTopTagsWithMostText } from '../api/auth';\n\nconst TopTagsPage = () => {\n    const [pageId, setPageId] = useState(\"1\");\n    const [selectedOption, setSelectedOption] = useState(\"distinct\");\n    const [tagsData, setTagsData] = useState([]);\n    const navigate = useNavigate();\n\n    // Opciones para el Dropdown\n    const options = [\n        { label: \"TAGs con más palabras distintas\", value: \"distinct\" },\n        { label: \"TAGs con más texto\", value: \"text\" },\n    ];\n\n    // Función para obtener los datos según la opción seleccionada\n    const fetchTagsData = async () => {\n        try {\n            let response;\n            if (selectedOption === \"distinct\") {\n                response = await getTopTagsWithMostDistinctWords(pageId);\n            } else {\n                response = await getTopTagsWithMostText(pageId);\n            }\n            console.log(\"Resultado:\", response.data);\n            setTagsData(response.data);\n        } catch (error) {\n            console.error(\"Error al obtener los datos:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchTagsData();\n    }, [selectedOption, pageId]);\n\n    return (\n        <div className=\"text-white bg-zinc-900 m-auto h-screen max-w-[800px]\">\n            <h1 className=\"text-5xl p-5\">Top de TAGs por Página</h1>\n\n            <Dropdown\n                buttonText=\"Seleccionar Top\"\n                action={() => {}}\n                isActive={true}\n                options={options.map((option) => ({\n                    label: option.label,\n                    onClick: () => setSelectedOption(option.value),\n                }))}\n                showHeader={true}\n            />\n\n            <Input\n                placeholder=\"Ingrese el ID de la página...\"\n                value={pageId}\n                onChange={(e) => setPageId(e.target.value)}\n            />\n            <Button onClick={fetchTagsData}>Buscar</Button>\n\n            <h2 className=\"text-3xl p-5\">Resultados:</h2>\n            <ul>\n                {tagsData.map((tag: any, index: number) => (\n                    <li key={index} className=\"p-2\">\n                        <strong>{tag.tag}</strong>: {selectedOption === \"distinct\" ? `${tag.count} palabras distintas` : `${tag.textLength} caracteres de texto`}\n                    </li>\n                ))}\n            </ul>\n\n            <Button className=\"text-2xl\" onClick={() => navigate(\"/\")}>Volver a inicio</Button>\n        </div>\n    );\n};\n\nexport default TopTagsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}