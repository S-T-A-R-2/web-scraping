{"ast":null,"code":"var _jsxFileName = \"/home/anfeng/Desktop/web-scraping/Interfaz/frontend/src/pages/TopTagsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getTopTagsWithMostDistinctWords, getTopTagsWithMostText } from '../api/auth';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopTagsPage = () => {\n  _s();\n  const [pageId, setPageId] = useState(\"1\");\n  const [selectedOption, setSelectedOption] = useState(\"distinct\");\n  const [tagsData, setTagsData] = useState([]);\n  const navigate = useNavigate();\n\n  // Opciones para el Dropdown\n  const options = [{\n    label: \"TAGs con más palabras distintas\",\n    value: \"distinct\"\n  }, {\n    label: \"TAGs con más texto\",\n    value: \"text\"\n  }];\n\n  // Función para obtener los datos según la opción seleccionada\n  const fetchTagsData = async () => {\n    try {\n      let data;\n      if (selectedOption === \"distinct\") {\n        data = await getTopTagsWithMostDistinctWords(pageId);\n      } else {\n        data = await getTopTagsWithMostText(pageId);\n      }\n      console.log(\"Resultado:\", data);\n      setTagsData(data);\n    } catch (error) {\n      console.error(\"Error al obtener los datos:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchTagsData();\n  }, [selectedOption, pageId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-white bg-zinc-900 m-auto h-screen max-w-[800px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl p-5\",\n      children: \"Top Tags\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex p-5\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Buscar p\\xE1ginas...\",\n        onChange: e => setPageId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"inline\",\n        onClick: fetchTagsData,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSelectedOption(e.target.value),\n        value: selectedOption,\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"text-2xl\",\n      onClick: () => {\n        navigate(\"/\");\n      },\n      children: \"Volver a inicio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Resultados:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: tagsData.map((tag, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [tag.tag, \": \", selectedOption === \"distinct\" ? tag.distinct_words_count : tag.total_word_count]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(TopTagsPage, \"G2F2f5BiRW0xrvjW0VjIiJpjazY=\", false, function () {\n  return [useNavigate];\n});\n_c = TopTagsPage;\nexport default TopTagsPage;\nvar _c;\n$RefreshReg$(_c, \"TopTagsPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getTopTagsWithMostDistinctWords","getTopTagsWithMostText","Button","Input","jsxDEV","_jsxDEV","TopTagsPage","_s","pageId","setPageId","selectedOption","setSelectedOption","tagsData","setTagsData","navigate","options","label","value","fetchTagsData","data","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","onClick","map","option","tag","index","distinct_words_count","total_word_count","_c","$RefreshReg$"],"sources":["/home/anfeng/Desktop/web-scraping/Interfaz/frontend/src/pages/TopTagsPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getTopTagsWithMostDistinctWords, getTopTagsWithMostText } from '../api/auth';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\n\nconst TopTagsPage = () => {\n    const [pageId, setPageId] = useState(\"1\");\n    const [selectedOption, setSelectedOption] = useState(\"distinct\");\n    const [tagsData, setTagsData] = useState([]);\n    const navigate = useNavigate();\n\n    // Opciones para el Dropdown\n    const options = [\n        { label: \"TAGs con más palabras distintas\", value: \"distinct\" },\n        { label: \"TAGs con más texto\", value: \"text\" },\n    ];\n\n    // Función para obtener los datos según la opción seleccionada\n    const fetchTagsData = async () => {\n        try {\n            let data;\n            if (selectedOption === \"distinct\") {\n                data = await getTopTagsWithMostDistinctWords(pageId);\n            } else {\n                data = await getTopTagsWithMostText(pageId);\n            }\n            console.log(\"Resultado:\", data);\n            setTagsData(data);\n        } catch (error) {\n            console.error(\"Error al obtener los datos:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchTagsData();\n    }, [selectedOption, pageId]);\n\n    return (\n        <div className=\"text-white bg-zinc-900 m-auto h-screen max-w-[800px]\">\n            <h1 className='text-5xl p-5'>Top Tags</h1>\n            <div className='flex p-5'>\n                <Input \n                    placeholder='Buscar páginas...'\n                    onChange={(e) => setPageId(e.target.value)}\n                />\n                <Button className=\"inline\" onClick={fetchTagsData}>Search</Button>\n            </div>\n            <div>\n                <select onChange={(e) => setSelectedOption(e.target.value)} value={selectedOption}>\n                    {options.map(option => (\n                        <option key={option.value} value={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            <Button className=\"text-2xl\" onClick={() => {navigate(\"/\")}}>Volver a inicio</Button>\n            <div>\n                <h2>Resultados:</h2>\n                <ul>\n                    {tagsData.map((tag, index) => (\n                        <li key={index}>{tag.tag}: {selectedOption === \"distinct\" ? tag.distinct_words_count : tag.total_word_count}</li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default TopTagsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}