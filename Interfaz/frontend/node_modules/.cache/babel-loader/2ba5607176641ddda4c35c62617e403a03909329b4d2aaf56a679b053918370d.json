{"ast":null,"code":"var _jsxFileName = \"/home/anfeng/Desktop/web-scraping/Interfaz/frontend/src/pages/SearchPercentagePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { findPageByUrl, getWordPercentageInPage } from '../api/auth';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordPercentagePage = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [pageId, setPageId] = useState(null);\n  const [percentageResults, setPercentageResults] = useState([]);\n  const [error, setError] = useState('');\n\n  // Función para buscar el ID de la página usando el URL\n  const handleFindPageId = async () => {\n    try {\n      const response = await findPageByUrl(input);\n      setPageId(response.data.pageId);\n      setError('');\n    } catch (err) {\n      setError('No se pudo encontrar el ID de la página con el URL proporcionado.');\n    }\n  };\n\n  // useEffect para obtener el porcentaje de palabras en la página cuando pageId cambia\n  useEffect(() => {\n    const fetchWordPercentage = async () => {\n      if (!pageId) return;\n      try {\n        const response = await getWordPercentageInPage(pageId);\n        console.log(response.data);\n        setPercentageResults(response.data);\n        setError('');\n      } catch (err) {\n        setError('No se pudo obtener el porcentaje de palabras en la página.');\n      }\n    };\n    fetchWordPercentage();\n  }, [pageId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-white bg-zinc-900 m-auto h-screen max-w-[800px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl p-5\",\n      children: \"Porcentaje de Palabra en P\\xE1gina\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex p-5\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Ingresa URL o ID de p\\xE1gina...\",\n        value: input,\n        onChange: e => setInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleFindPageId,\n        children: \"Buscar ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl\",\n        children: \"Resultados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: percentageResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [result.palabra, \": \", result.cantidad, \" apariciones, \", result.porcentaje, \"% del total de palabras\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(WordPercentagePage, \"gWd2hWl90/SDaumt6ieR5NfjW2I=\");\n_c = WordPercentagePage;\nexport default WordPercentagePage;\nvar _c;\n$RefreshReg$(_c, \"WordPercentagePage\");","map":{"version":3,"names":["React","useState","useEffect","findPageByUrl","getWordPercentageInPage","Button","Input","jsxDEV","_jsxDEV","WordPercentagePage","_s","input","setInput","pageId","setPageId","percentageResults","setPercentageResults","error","setError","handleFindPageId","response","data","err","fetchWordPercentage","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","map","result","index","palabra","cantidad","porcentaje","_c","$RefreshReg$"],"sources":["/home/anfeng/Desktop/web-scraping/Interfaz/frontend/src/pages/SearchPercentagePage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { findPageByUrl, getWordPercentageInPage } from '../api/auth';\nimport Button from '../components/Button';\nimport Input from '../components/Input';\n\nconst WordPercentagePage: React.FC = () => {\n    const [input, setInput] = useState<string>('');\n    const [pageId, setPageId] = useState<number | null>(null);\n    const [percentageResults, setPercentageResults] = useState([]);\n    const [error, setError] = useState<string>('');\n\n    // Función para buscar el ID de la página usando el URL\n    const handleFindPageId = async () => {\n        try {\n            const response = await findPageByUrl(input);\n            setPageId(response.data.pageId);\n            setError('');\n        } catch (err) {\n            setError('No se pudo encontrar el ID de la página con el URL proporcionado.');\n        }\n    };\n\n    // useEffect para obtener el porcentaje de palabras en la página cuando pageId cambia\n    useEffect(() => {\n        const fetchWordPercentage = async () => {\n            if (!pageId) return;\n\n            try {\n                const response = await getWordPercentageInPage(pageId);\n                console.log(response.data);\n                setPercentageResults(response.data);\n                setError('');\n            } catch (err) {\n                setError('No se pudo obtener el porcentaje de palabras en la página.');\n            }\n        };\n\n        fetchWordPercentage();\n    }, [pageId]);\n\n    return (\n        <div className=\"text-white bg-zinc-900 m-auto h-screen max-w-[800px]\">\n            <h1 className=\"text-5xl p-5\">Porcentaje de Palabra en Página</h1>\n\n            {/* Input para URL o ID */}\n            <div className=\"flex p-5\">\n                <Input\n                    placeholder=\"Ingresa URL o ID de página...\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                />\n                <Button onClick={handleFindPageId}>Buscar ID</Button>\n            </div>\n\n            {/* Mensaje de error */}\n            {error && <p className=\"text-red-500\">{error}</p>}\n\n            {/* Resultados */}\n            <div className=\"p-5\">\n                <h2 className=\"text-3xl\">Resultados</h2>\n                <ul>\n                    {percentageResults.map((result: any, index: number) => (\n                        <li key={index}>\n                            {result.palabra}: {result.cantidad} apariciones, {result.porcentaje}% del total de palabras\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default WordPercentagePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}