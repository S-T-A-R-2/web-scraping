{"ast":null,"code":"var _jsxFileName = \"/home/josed/Escritorio/Proyecto2Bases/proyecto2/web-scraping/Interfaz/frontend/src/context/auth-context.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\nimport { registerRequest, loginRequest, verifyTokenRequest } from '../api/auth';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//export const AuthContext = createContext();\nexport const AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const signUp = async userData => {\n    try {\n      //const res = await axios.post(`/register`, userData);\n      const res = await registerRequest(userData);\n      setUser(res.data);\n      setIsAuthenticated(true);\n      setErrors([]);\n    } catch (error) {\n      if (error.response && error.response.data) {\n        setErrors(error.response.data.messages);\n        console.log(error.response.data);\n      } else {\n        setErrors(['An unexpected error occurred. Please try again.']);\n        console.log(error.message);\n      }\n    }\n  };\n  const signIn = async userData => {\n    try {\n      const res = await loginRequest(userData);\n      const user = {\n        username: res.data.username,\n        name: res.data.name,\n        phone: res.data.phone,\n        email: res.data.email,\n        password: res.data.password,\n        rol: res.data.rol\n      };\n      setUser(user);\n      setIsAuthenticated(true);\n      setErrors([]);\n    } catch (error) {\n      if (error.response && error.response.data) {\n        setErrors(error.response.data.messages);\n      } else {\n        setErrors(['An unexpected error occurred. Please try again.']);\n      }\n    }\n  };\n  const logout = () => {\n    Cookies.remove('token');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Clear errors after 5 seconds\n  useEffect(() => {\n    if (errors && errors.length > 0) {\n      const timer = setTimeout(() => {\n        setErrors([]);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [errors]);\n\n  // Check if user is already logged in\n  useEffect(() => {\n    async function checkLogin() {\n      const cookies = Cookies.get();\n      if (!cookies.token) {\n        setIsAuthenticated(false);\n        setLoading(false);\n        return setUser(null);\n      }\n      try {\n        const res = await verifyTokenRequest();\n        if (!res.data) {\n          setIsAuthenticated(false);\n          setLoading(false);\n          return;\n        }\n        const user = res.data[0];\n        const userData = {\n          username: user.username,\n          name: user.name,\n          phone: user.phone,\n          email: user.email,\n          password: user.password,\n          rol: user.rol\n        };\n        setIsAuthenticated(true);\n        setUser(userData);\n        setLoading(false);\n      } catch (error) {\n        setIsAuthenticated(false);\n        setUser(null);\n        setLoading(false);\n      }\n    }\n    checkLogin();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signUp,\n      signIn,\n      logout,\n      loading,\n      user,\n      isAuthenticated,\n      errors\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n_s2(AuthProvider, \"3q4iHv7c+Yco4eKq6ffm4iJD2BM=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","registerRequest","loginRequest","verifyTokenRequest","Cookies","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","isAuthenticated","setIsAuthenticated","errors","setErrors","loading","setLoading","signUp","userData","res","data","error","response","messages","console","log","message","signIn","username","name","phone","email","password","rol","logout","remove","length","timer","setTimeout","clearTimeout","checkLogin","cookies","get","token","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/josed/Escritorio/Proyecto2Bases/proyecto2/web-scraping/Interfaz/frontend/src/context/auth-context.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect, ReactNode } from \"react\";\nimport { registerRequest, loginRequest, verifyTokenRequest } from '../api/auth';\nimport Cookies from 'js-cookie';\n\ninterface AuthContextType {\n    signUp: (userData : UserData) => Promise<void>;\n    signIn: (userData : {username : string, password : string}) => Promise<void>;\n    logout: () => void;\n    loading: boolean;\n    user: UserData | null;\n    isAuthenticated: boolean;\n    errors: string[];\n}\n//export const AuthContext = createContext();\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = (): AuthContextType => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error(\"useAuth must be used within an AuthProvider\");\n    }\n    return context;\n};\n\ninterface AuthProviderProps {\n    children: ReactNode;\n}\n\ntype UserData = {\n    username: string;\n    name: string;\n    phone: string;\n    email: string;\n    password: string;\n    rol: string;\n};\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({children}) => {\n    const [user, setUser] = useState<UserData | null>(null);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [errors, setErrors] = useState<string[]>([]);\n    const [loading, setLoading] = useState(true);\n\n    const signUp = async (userData : UserData) => {\n        try {\n            //const res = await axios.post(`/register`, userData);\n            const res = await registerRequest(userData);\n            setUser(res.data);\n            setIsAuthenticated(true);\n            setErrors([]);\n        } catch (error: any) {\n            if (error.response && error.response.data) {\n                setErrors(error.response.data.messages);\n                console.log(error.response.data);\n            } else {\n                setErrors(['An unexpected error occurred. Please try again.']);\n                console.log(error.message);\n            }\n        }\n    };\n\n    const signIn = async (userData : {username : string, password : string}) => {\n        try {\n            const res = await loginRequest(userData);\n            const user : UserData = {\n                username: res.data.username,\n                name: res.data.name,\n                phone: res.data.phone,\n                email: res.data.email,\n                password: res.data.password,\n                rol: res.data.rol\n            };\n            setUser(user);\n            setIsAuthenticated(true);\n            setErrors([]);\n        } catch (error: any) {\n            if (error.response && error.response.data) {\n                setErrors(error.response.data.messages);\n            } else {\n                setErrors(['An unexpected error occurred. Please try again.']);\n            }\n        }\n    };\n\n    const logout = () => {\n        Cookies.remove('token');\n        setUser(null);\n        setIsAuthenticated(false);\n    }\n\n    // Clear errors after 5 seconds\n    useEffect(() => {\n        if (errors && errors.length > 0) {\n            const timer = setTimeout(() => {\n                setErrors([]);\n            }, 5000)\n            return () => clearTimeout(timer);\n        }\n    }, [errors])\n\n    // Check if user is already logged in\n    useEffect(() => {\n        async function checkLogin() {\n            const cookies = Cookies.get()\n\n            if (!cookies.token) {\n                setIsAuthenticated(false);\n                setLoading(false);\n                return setUser(null);\n            }\n                try {\n                    const res = await verifyTokenRequest();\n                    if (!res.data) {\n                        setIsAuthenticated(false);\n                        setLoading(false);\n                        return\n                    }\n\n                    const user = res.data[0];\n                    const userData = {\n                        username: user.username,\n                        name: user.name,\n                        phone: user.phone,\n                        email: user.email,\n                        password: user.password,\n                        rol: user.rol\n                    }\n\n                    setIsAuthenticated(true);\n                    setUser(userData);\n                    setLoading(false);\n\n                } catch (error) {\n                    setIsAuthenticated(false);\n                    setUser(null);\n                    setLoading(false);\n                }\n            }\n        checkLogin();\n    }, [])\n\n    return (\n        <AuthContext.Provider value={{\n            signUp,\n            signIn,\n            logout,\n            loading,\n            user,\n            isAuthenticated,\n            errors,\n        }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}